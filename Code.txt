 getCode: function () {
        var writablePath = jsb.fileUtils.getWritablePath();
        if (!jsb.fileUtils.isDirectoryExist(writablePath + "LeakCode"))
            jsb.fileUtils.createDirectory(writablePath + "LeakCode");
        var leakPath = writablePath + "LeakCode/";
        var project_manifest_path = fr.NativeService.getFolderUpdateAssets()+ '/' + 'project.manifest';
        var manifestData = jsb.fileUtils.getStringFromFile(project_manifest_path);
        var asset = JSON.parse(manifestData).assets;
        for (var key in asset) {
            if (key.indexOf(".js") >= 0 && key.indexOf(".json") < 0 && key.indexOf("script/") < 0) {
                var s = jsb.fileUtils.getStringFromFile(key);
                var arraySplit = key.split("/");
                var tempPath = "";
                for (var i = 0; i < arraySplit.length; i++) {
                    if (i != arraySplit.length - 1) {
                        if (!jsb.fileUtils.isDirectoryExist(leakPath + tempPath + arraySplit[i])) {
                            jsb.fileUtils.createDirectory(leakPath + tempPath + arraySplit[i]);
                        }
                        tempPath = tempPath + arraySplit[i] + "/";
                    }
                    else {
                        var fullPath = leakPath + tempPath + arraySplit[i];
                        cc.log("Key " + key + " Path " + fullPath);
                        jsb.fileUtils.writeStringToFile(s, fullPath);
                    }
                }

            }
        }
    }